version: '3'

services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile

    volumes:
      # Forwards the local Docker socket to the container.
      - /var/run/docker.sock:/var/run/docker-host.sock 
      # Update this to wherever you want VS Code to mount the folder of your project
      - ../..:/workspaces:cached

    # Overrides default command so things don't shut down after the process ends.
    entrypoint: /usr/local/share/docker-init.sh
    command: sleep infinity 

    # Uncomment the next four lines if you will use a ptrace-based debuggers like C++, Go, and Rust.
    # cap_add:
    #  - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  # react:
  #   restart: unless-stopped
  #   build:
  #     context: ../frontend
  #     dockerfile: ../frontend/dockerfile.dev
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ../frontend:/app
  # express:
  #   restart: unless-stopped
  #   build:
  #     context: ../backend
  #     dockerfile: ../backend/dockerfile.dev
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - ../backend:/app
  #   environment:
  #     - mysql_host=localhost
  #     - mysql_port=3306
  #     - mysql_user=test
  #     - mysql_password=test
  #     - mysql_database=eatwhat
  # db:
  #   image: mysql/mysql-server:8.0
  #   volumes:
  #     - ../db/eatwhat.sql:/docker-entrypoint-initdb.d/eatwhat.sql
  #   environment:
  #     mysql_root_password: root
  #     mysql_database: eatwhat
  #     mysql_user: test
  #     mysql_password: test
  #   ports:
  #     - "3306:3306"
  #   restart: unless-stopped
  #   command: ["mysqld", "--default-authentication-plugin=mysql_native_password"]
  # phpmyadmin:
  #   image: phpmyadmin
  #   restart: unless-stopped
  #   ports:
  #       - 8080:80
  #   environment:
  #       - pma_arbitrary=1